language syntax_lexemes(java);

prefix = "Lexemes"

:: lexer

lowercase = /[a-z]/

icon: /[0-7]+/       (class)
identifier: /@?[a-zA-Z_][A-Za-z_0-9]*/   -2    (class)
identifierX: /@{lowercase}+/       			 -1	 (class)
_skip:      /[\t\r\n ]+/    							{ return false; }

Lclass:		 /class/
Lextends:	 /extends/

LInt:		 /Int/               (soft)

Lstring:	 /string/

Lset:		 /set/
Lchoice:	 /choice/

# err: two matches
Lbool:		 /@bool/				(soft)

# err: no match!
L0choice:	 /0choice/			(soft)

# err: not a constant!
int:	 /922?/			(soft)


xyz:   /xyz/
xyz:   /012934/


abcde:   /abcde/			(soft)
abcde:   /01234/			(soft)

ssss:   /we/			(soft)
ssss:

# err: cannot have an action
wact:   /withAction/			(soft)   { System.out.println("oops"); return true; }

# err: cannot have a type
wtype (int):   /withType/			(soft)


delim(char): /[;:,\.\/\\]/       (class)


# err: overrides type
comma(Character): /,/   (soft)

# ok
colon_or_semicolon: /;/   (soft)
colon_or_semicolon: /:/   (soft)

:: parser

input ::=
	identifier ;
