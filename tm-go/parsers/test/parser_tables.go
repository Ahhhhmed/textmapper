// generated by Textmapper; DO NOT EDIT

package test

import (
	"fmt"
)

// Symbol represents a set of all terminal and non-terminal symbols of the test language.
type Symbol int

var symbolStr = [...]string{
	"Declaration_list",
	"Test",
	"Declaration",
	"setof_not_((eoi | '.') | '}')",
	"setof_not_((eoi | '.') | '}')_optlist",
	"empty1",
	"QualifiedName",
	"Decl1",
	"Decl2",
}

func (n Symbol) String() string {
	if n < Symbol(NumTokens) {
		return Token(n).String()
	}
	i := int(n) - int(NumTokens)
	if i < len(symbolStr) {
		return symbolStr[i]
	}
	return fmt.Sprintf("nonterminal(%d)", n)
}

var tmAction = []int32{
	-1, -1, -3, -1, -1, 41, -1, -21, 1, 3, 4, -1, -35, -79, -1, 10, -1, -1, 0,
	11, -1, -1, 38, -1, 8, -1, -1, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 13,
	25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 14, 40, -1, 6, -1, 7, 39, 5, -1,
	-1, -2, -2,
}

var tmLalr = []int32{
	14, -1, 0, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12, -1, -2, 6, -1, 7,
	-1, 8, -1, 9, -1, 10, -1, 0, 2, -1, -2, 1, 36, 2, 36, 3, 36, 4, 36, 5, 36, 6,
	36, 7, 36, 8, 36, 9, 36, 10, 36, 11, 36, 12, 36, 13, 36, 14, 36, 15, 36, 17,
	36, 18, 36, 19, 36, 20, 36, 21, 36, 22, 36, -1, -2, 13, 37, -1, -2,
}

var tmGoto = []int32{
	0, 4, 6, 8, 10, 12, 18, 36, 54, 74, 92, 112, 126, 132, 138, 142, 146, 148,
	150, 152, 158, 160, 162, 164, 172, 174, 190, 192, 194, 196, 198, 216, 232,
}

var tmFromTo = []int8{
	58, 60, 59, 61, 20, 28, 20, 29, 20, 30, 20, 31, 14, 22, 20, 32, 52, 56, 0, 2,
	6, 2, 7, 2, 16, 2, 17, 2, 20, 33, 25, 2, 26, 2, 54, 2, 0, 3, 6, 3, 7, 3, 16,
	3, 17, 3, 20, 34, 25, 3, 26, 3, 54, 3, 0, 4, 1, 4, 6, 4, 7, 4, 16, 4, 17, 4,
	20, 35, 25, 4, 26, 4, 54, 4, 0, 5, 6, 5, 7, 5, 16, 5, 17, 5, 20, 36, 25, 5,
	26, 5, 54, 5, 0, 6, 3, 12, 6, 6, 7, 6, 16, 6, 17, 6, 20, 37, 25, 6, 26, 6,
	54, 6, 6, 15, 16, 24, 17, 27, 20, 38, 25, 53, 26, 55, 54, 57, 3, 13, 4, 14,
	20, 39, 20, 40, 21, 50, 23, 51, 2, 11, 20, 41, 11, 19, 20, 42, 23, 52, 20,
	43, 20, 44, 6, 16, 16, 25, 20, 45, 20, 46, 20, 47, 20, 48, 0, 7, 6, 17, 16,
	26, 25, 54, 0, 58, 0, 8, 6, 8, 7, 18, 16, 8, 17, 18, 25, 8, 26, 18, 54, 18,
	20, 49, 12, 20, 13, 21, 14, 23, 0, 9, 1, 59, 6, 9, 7, 9, 16, 9, 17, 9, 25, 9,
	26, 9, 54, 9, 0, 10, 6, 10, 7, 10, 16, 10, 17, 10, 25, 10, 26, 10, 54, 10,
}

var tmRuleLen = []int8{
	2, 1, 1, 1, 1, 5, 4, 4, 3, 3, 2, 3, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 1, 3, 4, 1,
}

var tmRuleSymbol = []int32{
	23, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 28,
	29, 29, 30, 31,
}

// set(follow error) =
var afterErr = []int32{}
