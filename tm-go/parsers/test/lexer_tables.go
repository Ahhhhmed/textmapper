// generated by Textmapper; DO NOT EDIT

package test

const tmNumClasses = 25

type mapRange struct {
	lo         rune
	hi         rune
	defaultVal uint8
	val        []uint8
}

func mapRune(c rune) int {
	lo := 0
	hi := len(tmRuneRanges)
	for lo < hi {
		m := lo + (hi-lo)/2
		r := tmRuneRanges[m]
		if c < r.lo {
			hi = m
		} else if c >= r.hi {
			lo = m + 1
		} else {
			i := int(c - r.lo)
			if i < len(r.val) {
				return int(r.val[i])
			}
			return int(r.defaultVal)
		}
	}
	return 1
}

// Latin-1 characters.
var tmRuneClass = []uint8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 22, 24, 1, 1, 24, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	22, 1, 1, 1, 1, 1, 1, 1, 7, 8, 4, 1, 12, 2, 11, 3,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 13, 1, 1, 1, 14, 1,
	1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 9, 1, 10, 1, 20,
	1, 20, 20, 20, 20, 16, 18, 20, 20, 20, 20, 20, 20, 20, 20, 19,
	20, 20, 20, 17, 15, 20, 20, 20, 20, 20, 20, 5, 1, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

const tmRuneClassLen = 256
const tmFirstRule = -3

var tmRuneRanges = []mapRange{
	{8232, 8234, 23, nil},
}

var tmStateMap = []int{
	0,
}

var tmLexerAction = []int8{
	-3, -24, 27, 22, -24, 21, 20, 19, 18, 17, 16, 15, 14, 13, -24, 4,
	2, 2, 2, 2, 2, -24, 1, -24, 1, -4, -4, -4, -4, -4, -4, -4,
	-4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4,
	-4, -4, -7, -7, -1, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,
	-7, 2, 2, 2, 2, 2, 2, 2, -7, -7, -7, -24, -24, 3, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 2, 2, 2, 2, 2, 2,
	2, -24, -24, -24, -7, -7, -1, -7, -7, -7, -7, -7, -7, -7, -7, -7,
	-7, -7, -7, 2, 5, 2, 2, 2, 2, 2, -7, -7, -7, -7, -7, -1,
	-7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, 2, 2, 6, 2,
	2, 2, 2, -7, -7, -7, -7, -7, -1, -7, -7, -7, -7, -7, -7, -7,
	-7, -7, -7, -7, -7, 7, 2, 2, 2, 2, 2, 2, -7, -7, -7, -7,
	-7, -2, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, 2, 2,
	2, 8, 2, 2, 2, -7, -7, -7, -7, -7, -1, -7, -7, -7, -7, -7,
	-7, -7, -7, -7, -7, -7, -7, 2, 2, 2, 2, 9, 2, 2, -7, -7,
	-7, -7, -7, -1, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,
	2, 2, 2, 2, 10, 2, 2, -7, -7, -7, -7, -7, -2, -7, -7, -7,
	-7, -7, -7, -7, -7, -7, -7, -7, -7, 2, 2, 2, 2, 2, 2, 2,
	-7, -7, -7, -24, -24, 11, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, 12, 2, 2, 2, 2, 2, 2, 2, -24, -24, -24, -22, -22, -22, -22,
	-22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22,
	-22, -22, -22, -22, -22, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19,
	-19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -18, -18,
	-18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18,
	-18, -18, -18, -18, -18, -18, -18, -17, -17, -17, -17, -17, -17, -17, -17, -17,
	-17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12,
	-12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -11, -11, -11,
	-11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11,
	-11, -11, -11, -11, -11, -11, -24, -24, -24, 26, 23, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	23, 23, 23, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, -24, 23, 23, 25, 24, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,
	-5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, -6, -6, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,
	-20, 28, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21,
}

var tmBacktracking = []int{
	4, 3, // in Identifier
	4, 11, // in Identifier
}
