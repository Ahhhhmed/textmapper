// generated by Textmapper; DO NOT EDIT

package test

const tmNumClasses = 25

type mapRange struct {
	lo         rune
	hi         rune
	defaultVal uint8
	val        []uint8
}

func mapRune(c rune) int {
	lo := 0
	hi := len(tmRuneRanges)
	for lo < hi {
		m := lo + (hi-lo)/2
		r := tmRuneRanges[m]
		if c < r.lo {
			hi = m
		} else if c >= r.hi {
			lo = m + 1
		} else {
			i := int(c - r.lo)
			if i < len(r.val) {
				return int(r.val[i])
			}
			return int(r.defaultVal)
		}
	}
	return 1
}

// Latin-1 characters.
var tmRuneClass = []uint8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 5, 6, 1, 7, 8, 9, 10,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 1, 1, 1, 13, 1,
	1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 1, 16, 1, 14,
	1, 14, 14, 14, 14, 17, 18, 14, 14, 14, 14, 14, 14, 14, 14, 19,
	14, 14, 14, 20, 21, 14, 14, 14, 14, 14, 14, 22, 1, 23, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

const tmRuneClassLen = 256
const tmFirstRule = -3

var tmRuneRanges = []mapRange{
	{8232, 8234, 24, nil},
}

var tmStateMap = []int{
	0,
}

var tmToken = []Token{
	1, 0, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21,
}

var tmLexerAction = []int8{
	-4, -3, 29, 29, 28, 27, -3, 26, 24, 23, 18, 17, 16, -3, 15, 14,
	13, 15, 15, 15, 15, 3, 2, 1, -3, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -5, -5, -5, -5, -5,
	-5, -5, -5, -1, -5, -5, 15, -5, -5, 15, -5, -5, 4, 15, 15, 15,
	15, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -1, -5, -5, 15,
	-5, -5, 15, -5, -5, 15, 15, 15, 5, 15, -5, -5, -5, -5, -5, -5,
	-5, -5, -5, -5, -5, -1, -5, -5, 15, -5, -5, 15, -5, -5, 15, 15,
	15, 15, 6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -2, -5,
	-5, 15, -5, -5, 15, -5, -5, 15, 7, 15, 15, 15, -5, -5, -5, -5,
	-5, -5, -5, -5, -5, -5, -5, -1, -5, -5, 15, -5, -5, 15, -5, -5,
	15, 15, 8, 15, 15, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,
	-1, -5, -5, 15, -5, -5, 15, -5, -5, 15, 15, 9, 15, 15, -5, -5,
	-5, -5, -5, -5, -5, -5, -5, -5, -5, -2, -5, -5, 15, -5, -5, 15,
	-5, -5, 15, 15, 15, 15, 15, -5, -5, -5, -3, -3, -3, -3, -3, -3,
	-3, -3, 10, -3, -3, 15, -3, 11, 15, -3, -3, 15, 15, 15, 15, 15,
	-3, -3, -3, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -3, -3, -3, -3,
	-3, -3, -3, -3, 12, -3, -3, 15, -3, -3, 15, -3, -3, 15, 15, 15,
	15, 15, -3, -3, -3, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18,
	-18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -17, -17,
	-17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17,
	-17, -17, -17, -17, -17, -17, -17, -5, -5, -5, -5, -5, -5, -5, -5, -1,
	-5, -5, 15, -5, -5, 15, -5, -5, 15, 15, 15, 15, 15, -5, -5, -5,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -9, -9, -9, -9, -9, -9, -9,
	-9, -9, -9, -9, 17, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9,
	-9, -9, -3, -3, -3, -3, -3, -3, 20, -3, -3, -3, 19, -3, -3, -3,
	-3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -8, 19, 19, -8, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, -8, -3, 20, 20, 20, 20, 20, 21, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -3, 20, 20,
	20, 20, 20, 21, 20, 20, 20, 22, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,
	-7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -19,
	-19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19,
	-19, -19, -19, -19, -19, -19, -19, -19, -22, -22, -22, -22, -22, -22, -22, -22,
	-22, -22, -22, -22, -22, 25, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22,
	-22, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23,
	-23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -20, -20, -20, -20, -20, -20,
	-20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,
	-20, -20, -20, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,
	-6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,
}

var tmBacktracking = []int{
	2, 12, // in Identifier
	2, 10, // in Identifier
}
