// generated by Textmapper; DO NOT EDIT

package json

import (
	"fmt"
)

// Symbol represents a set of all terminal and non-terminal symbols of the json language.
type Symbol int

var symbolStr = [...]string{
	"JSONText",
	"JSONValue",
	"JSONValue_A",
	"EmptyObject",
	"lookahead_EmptyObject",
	"JSONObject",
	"lookahead_notEmptyObject",
	"JSONMember",
	"JSONMemberList",
	"JSONArray",
	"JSONElementList",
	"JSONElementListopt",
}

func (n Symbol) String() string {
	if n < Symbol(terminalEnd) {
		return Token(n).String()
	}
	i := int(n) - int(terminalEnd)
	if i < len(symbolStr) {
		return symbolStr[i]
	}
	return fmt.Sprintf("nonterminal(%d)", n)
}

var tmAction = []int32{
	-3, -7, -1, -25, 17, 18, 10, 11, 12, 13, 0, 15, 14, -1, 16, -1,
	28, -45, -1, -1, 19, -51, 27, 22, -1, 25, -1, 29, -69, 21, -1, 8,
	9, 1, 2, 3, 4, 24, 6, 5, 7, 26, -2, -1, -2,
}

var tmLalr = []int32{
	1, 20, -1, -2, 3, -1, 9, -1, 10, -1, 12, -1, 13, -1, 14, -1,
	15, -1, 1, 32, -1, -2, 3, -1, 9, -1, 10, -1, 12, -1, 13, -1,
	14, -1, 15, -1, 1, 32, 4, 31, -1, -2, 6, -1, 4, 30, -1, -2,
	3, -1, 9, -1, 10, -1, 12, -1, 13, -1, 14, -1, 15, -1, 1, 32,
	-1, -2, 3, -1, 9, -1, 10, -1, 12, -1, 13, -1, 14, -1, 16, -1,
	1, 32, -1, -2,
}

var tmGoto = []int32{
	0, 1, 3, 6, 10, 11, 12, 14, 14, 14, 20, 24, 24, 28, 32, 36,
	39, 40, 40, 41, 42, 45, 50, 55, 59, 63, 65, 66, 70, 71, 72,
}

var tmFrom = []int8{
	43, 2, 13, 15, 19, 26, 1, 3, 21, 28, 18, 24, 17, 26, 1, 3,
	19, 21, 28, 30, 1, 3, 21, 28, 1, 3, 21, 28, 1, 3, 21, 28,
	1, 3, 21, 28, 1, 3, 21, 28, 1, 28, 1, 3, 21, 0, 1, 3,
	21, 28, 0, 1, 3, 21, 28, 1, 3, 21, 28, 1, 3, 21, 28, 19,
	30, 19, 1, 3, 21, 28, 3, 3,
}

var tmTo = []int8{
	44, 15, 19, 20, 23, 29, 3, 3, 3, 3, 22, 28, 21, 30, 4, 4,
	24, 4, 31, 24, 5, 5, 5, 32, 6, 6, 6, 33, 7, 7, 7, 34,
	8, 8, 8, 35, 9, 9, 9, 36, 43, 37, 10, 16, 27, 42, 11, 11,
	11, 38, 2, 2, 2, 2, 2, 12, 12, 12, 39, 13, 13, 13, 13, 25,
	41, 26, 14, 14, 14, 40, 17, 18,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 4, 3, 0, 3, 1, 3, 3, 1, 3, 1, 0,
	0,
}

var tmRuleSymbol = []int32{
	18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 21, 22, 23, 23, 24, 25, 26, 26, 27, 28, 28, 29, 29,
	24,
}

// set(first JSONValue<+A>)
var Literals = []int32{
	1,
}
