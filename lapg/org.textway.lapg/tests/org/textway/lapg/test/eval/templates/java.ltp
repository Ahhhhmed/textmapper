
${template header-}
/**
 * Copyright 2002-2012 Evgeny Gryaznov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
${end}

${template main-}
${file opts.prefix+'Parser.java'}${call unit}${end-}
${file opts.prefix+'Lexer.java'}${call java_lexer.unit}${end-}
${file opts.prefix+'Tree.java'}${call java_tree.unit}${end-}
${end}

${template parserTables-}
${end}

${template tokensEnum-}
${end}

${template rulesEnum-}
${end}

${template applyRule-}
	@SuppressWarnings("unchecked")
	protected void applyRule(${self->symbolClassName()} lapg_gg, int rule, int ruleLength) {
	 // TODO
	}
${end}

${template customParseRoutines-}
${end}

${cached query symbolClassName() = 'ParseSymbol'}

${cached query lazyNext() = true}
${cached query needDebug() = false}

${cached query hasRecovering() = true}
${cached query errorLexem() = 'grammar.getError().getIndex()'}

${cached query needActionsTable = true}
${cached query needInitialState = true}
${cached query needFinalState = true}
${cached query hasNoEoiInputs = true}
${cached query hasEoiInputs = true}
