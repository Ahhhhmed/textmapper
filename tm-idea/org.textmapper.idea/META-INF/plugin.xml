<!--
  ~ Copyright (c) 2010-2012 Evgeny Gryaznov
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see http://www.gnu.org/licenses/.
  -->
<idea-plugin version="2">
	<id>org.textmapper.idea</id>
	<name>Lapg support</name>
	<category>Custom Languages</category>
	<version>0.9.2</version>
	<vendor url="http://textmapper.org/" email="egryaznov@gmail.com">Evgeny Gryaznov</vendor>

	<!-- 12.1.4 -->
	<idea-version since-build="129.713"/>

	<description><![CDATA[
	<html>
		<h3>Textmapper support for IntelliJ 12.1+</h3>
		<br>
		<b>Features:</b><br>
		<ul>
		<li>Syntax highlighting</li>
		<li>Navigation (go to declaration)</li>
		<li>Find usages</li>
		<li>Grammar compiler</li>
		</ul>
	</html>
	]]></description>

	<application-components>
		<component>
			<implementation-class>org.textmapper.idea.LapgLoader</implementation-class>
		</component>
	</application-components>

	<project-components>
		<component>
			<implementation-class>org.textmapper.idea.compiler.LapgCompilerProjectComponent</implementation-class>
		</component>
	</project-components>

	<actions>
		<action id="org.textmapper.idea.actions.NewLapgGrammar"
				class="org.textmapper.idea.actions.NewLapgGrammar"
				text="Textmapper grammar" description="Creates new Textmapper grammar">
			<add-to-group group-id="NewGroup" anchor="last"/>
		</action>
	</actions>

	<extensions defaultExtensionNs="com.intellij">
		<compileServer.plugin classpath="jps/tm-jps-plugin.jar;tm-common.jar;textmapper-0.9.2.jar"/>
		<facetType implementation="org.textmapper.idea.facet.LapgFacetType"/>
		<frameworkSupport implementation="org.textmapper.idea.facet.LapgFacetTypeFrameworkSupportProvider"/>
		<fileTypeFactory implementation="org.textmapper.idea.LapgFileTypeFactory"/>
		<fileTemplateGroup implementation="org.textmapper.idea.actions.LapgTemplatesFactory"/>

		<syntaxHighlighter
				key="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.LapgSyntaxHighlighter"/>
		<lang.parserDefinition
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.parser.TMParserDefinition"/>
		<lang.foldingBuilder
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.editor.LapgFoldingBuilder"/>
		<lang.psiStructureViewFactory
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.structureView.TMStructureViewFactory"/>
		<lang.findUsagesProvider
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.findUsages.TMFindUsagesProvider"/>
		<lang.namesValidator
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.refactoring.TMNamesValidator"/>
		<lang.formatter
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.formatter.TMFormattingModelBuilder"/>
		<lang.ast.factory
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.lexer.TmASTFactory"/>
		<referencesSearch
				implementation="org.textmapper.idea.lang.syntax.findUsages.TMOptReferencesSearcher"/>
		<itemPresentationProvider forClass="org.textmapper.idea.lang.syntax.psi.TmLexerState"
								  implementationClass="org.textmapper.idea.lang.syntax.presentation.LexerStatePresentationProvider"/>
		<extendWordSelectionHandler
			implementation="org.textmapper.idea.lang.syntax.editor.RuleListSelectionHandlerBase" />
		<findUsagesHandlerFactory
				implementation="org.textmapper.idea.lang.syntax.findUsages.TMFindUsagesHandlerFactory"/>
		<typedHandler
			implementation="org.textmapper.idea.lang.syntax.editor.TmTypedHandler"/>
		<enterHandlerDelegate
			implementation="org.textmapper.idea.lang.syntax.editor.EnterAfterUnmatchedNonTermStartHandler"/>
		<renamePsiElementProcessor
				implementation="org.textmapper.idea.lang.syntax.refactoring.RenameTMLexerStateProcessor"/>
		<colorSettingsPage implementation="org.textmapper.idea.lang.syntax.LapgColorsPage"/>
		<annotator
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.LapgAnnotator"/>
		<externalAnnotator
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.lang.syntax.compiler.TMExternalAnnotator"/>
		<defaultLiveTemplatesProvider
				implementation="org.textmapper.idea.templates.LapgDefaultLiveTemplatesProvider"/>
		<lang.commenter
				language="Lapg Syntax"
				implementationClass="org.textmapper.idea.editor.LapgCommenter"/>
		<!-- Lapg templates -->
		<syntaxHighlighter
				key="Lapg Templates"
				factoryClass="org.textmapper.idea.lang.templates.LtplSyntaxHighlighterProvider"/>
		<lang.parserDefinition
				language="Lapg Templates"
				implementationClass="org.textmapper.idea.lang.templates.parser.LtplParserDefinition"/>
	</extensions>
</idea-plugin>